@startuml
' Definições de estilo para melhorar a aparência
skinparam classAttributeIconSize 0
skinparam class {
    BackgroundColor LightBlue
    ArrowColor Black
    BorderColor 6C8EBF
}
hide empty members

' Enumerações para tipos e status
enum TipoUsuario {
    ADMINISTRADOR
    OPERADOR
}

enum StatusMissao {
    AGENDADA
    EM_ANDAMENTO
    CONCLUIDA
    CANCELADA
}

enum StatusDrone {
    DISPONIVEL
    EM_MISSAO
    EM_MANUTENCAO
}

' Definição das Classes
class Usuario {
    - id: int
    - nome: String
    - login: String
    - senhaHash: String
    - tipo: TipoUsuario
    + autenticar(login, senha): boolean
    + sair(): void
}

class AreaAgricola {
    - id: int
    - localizacao: String
    - tamanho: double
    - tipoCultivo: String
}

class Drone {
    - id: int
    - modelo: String
    - status: StatusDrone
    + verificarStatus(): StatusDrone
}

class Missao {
    - id: int
    - dataHora: DateTime
    - status: StatusMissao
    + iniciarMissao(): void
    + concluirMissao(): void
}

class DadosColetados {
    - id: int
    - imagem: byte[]
    - temperatura: double
    - umidade: double
    - pragas: String
    - dataHora: DateTime
}

class ControleMissao {
    + agendarMissao(data, area, drone): Missao
    + registrarDados(missao, dados): void
    + gerarRelatorio(): String
    + registrarArea(area): void
    + registrarDrone(drone): void
    + validarConflitoMissao(drone, dataHora): boolean
}

' Relacionamentos entre as classes
ControleMissao ..> Usuario : "gerencia"
ControleMissao ..> AreaAgricola : "gerencia"
ControleMissao ..> Drone : "gerencia"
ControleMissao ..> Missao : "agenda"

Missao "1" -- "1" AreaAgricola : "é para"
Missao "1" -- "1" Drone : "é atribuída a"
Missao "1" -- "0..*" DadosColetados : "gera"
@enduml